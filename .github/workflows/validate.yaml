name: Validate

on:
  push:
    branches:
      - master
      - main
  pull_request:
  workflow_dispatch:

jobs:
  validate-hacs:
    name: Validate with HACS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: HACS validation
        uses: hacs/action@main
        with:
          category: integration

  validate-json:
    name: Validate JSON files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate manifest.json
        run: |
          python3 -c "import json; json.load(open('custom_components/solarguardian/manifest.json'))"
          echo "✓ manifest.json is valid"

      - name: Validate hacs.json
        run: |
          python3 -c "import json; json.load(open('hacs.json'))"
          echo "✓ hacs.json is valid"

      - name: Validate strings.json
        run: |
          python3 -c "import json; json.load(open('custom_components/solarguardian/strings.json'))"
          echo "✓ strings.json is valid"

      - name: Validate translation files
        run: |
          for file in custom_components/solarguardian/translations/*.json; do
            python3 -c "import json; json.load(open('$file'))"
            echo "✓ $(basename $file) is valid"
          done

  validate-python:
    name: Validate Python code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black isort

      - name: Check code formatting with Black
        run: |
          black --check custom_components/solarguardian/

      - name: Check import sorting with isort
        run: |
          isort --check-only custom_components/solarguardian/

      - name: Lint with Ruff
        run: |
          ruff check custom_components/solarguardian/

  validate-manifest:
    name: Validate manifest requirements
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check required manifest fields
        run: |
          python3 << 'EOF'
          import json
          import sys

          with open('custom_components/solarguardian/manifest.json') as f:
              manifest = json.load(f)

          required_fields = [
              'domain', 'name', 'codeowners', 'config_flow',
              'documentation', 'iot_class', 'issue_tracker',
              'requirements', 'version'
          ]

          missing = [field for field in required_fields if field not in manifest]
          if missing:
              print(f"❌ Missing required fields: {missing}")
              sys.exit(1)

          # Validate URLs
          if 'github.com' not in manifest['documentation']:
              print("❌ Documentation URL must be a GitHub URL")
              sys.exit(1)

          if 'github.com' not in manifest['issue_tracker']:
              print("❌ Issue tracker URL must be a GitHub URL")
              sys.exit(1)

          print("✓ All required manifest fields present and valid")
          EOF
